{"version":3,"sources":["Components/ListPersons.js","Services/service.js","App.js","index.js"],"names":["ListPersons","_ref","persons","filter","removePerson","map","x","name","toLowerCase","indexOf","react_default","a","createElement","key","number","type","onClick","baseUrl","service","axios","get","then","response","data","newObject","post","id","put","concat","Obj","delete","App","_useState","useState","_useState2","Object","slicedToArray","setPersons","_useState3","_useState4","setFilter","_useState5","_useState6","newName","setNewName","_useState7","_useState8","newNumber","setNewNumber","_useState9","_useState10","message","setMessage","useEffect","getData","console","log","AxiosServices","listPersonsProps","window","confirm","showMessage","props","setTimeout","className","value","onChange","event","target","onSubmit","preventDefault","nameAlreadyExists","forEach","person","alert","personObject","Components_ListPersons","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.940e38f5.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst ListPersons = ({persons , filter, removePerson}) => {\r\n\r\n    return (persons.map((x) => {\r\n        if (x.name.toLowerCase().indexOf(filter.toLowerCase()) !== -1 && filter !== '') {\r\n            return (\r\n                <li key={x.name}>{x.name} {x.number + '  '}\r\n                    <button type=\"submit\" onClick={() => { removePerson(x.name) }}>delete</button>\r\n                </li>\r\n\r\n            )\r\n        } else if (filter === '') {\r\n            return (\r\n                <li key={x.name}>{x.name} {x.number + '  '}\r\n                    <button type=\"submit\" onClick={() => { removePerson(x) }}>delete</button>\r\n                </li>\r\n            )\r\n        } else return (null)\r\n\r\n    })\r\n    )\r\n}\r\nexport default ListPersons","import axios from 'axios'\r\n\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  return axios.post(baseUrl, newObject)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  return axios.put(`${baseUrl}/${id}`, newObject)\r\n}\r\nconst deleteObject = (id, Obj) => {\r\n  return axios.delete(`${baseUrl}/${id}`, Obj)\r\n}\r\nexport default {\r\n  getAll: getAll,\r\n  create: create,\r\n  update: update,\r\n  delete: deleteObject\r\n}","import React, { useState, useEffect } from 'react'\r\nimport ListPersons from './Components/ListPersons'\r\nimport AxiosServices from './Services/service'\r\n\r\nconst App = () => {\r\n  const [persons, setPersons] = useState([])\r\n  const [filter, setFilter] = useState('')\r\n  const [newName, setNewName] = useState('')\r\n  const [newNumber, setNewNumber] = useState('')\r\n  const [message, setMessage] = useState('')\r\n\r\n  useEffect(() => {\r\n    getData()\r\n  }, [])\r\n\r\n  const getData = () => {\r\n    console.log('Get Data')\r\n    AxiosServices\r\n    .getAll()\r\n    .then(response => {\r\n      setPersons(response.data)\r\n    })\r\n  }\r\n  const addPerson = (event) => {\r\n    event.preventDefault()\r\n    var nameAlreadyExists = false\r\n    persons.forEach(person => {\r\n      if (person.name === newName) {\r\n        nameAlreadyExists = true\r\n        if (person.number !== newNumber) {\r\n          if(window.confirm(person.name + ' already exists, replace number?')) {\r\n            person.number = newNumber\r\n            AxiosServices\r\n            .update(person.id, person)\r\n            .then(response => {\r\n              console.log(response)\r\n            })\r\n            \r\n          }\r\n        }\r\n        else {\r\n          alert(`${newName} on jo luettelossa`)\r\n        }\r\n      }\r\n    });\r\n    if (!nameAlreadyExists) {\r\n      const personObject = {\r\n        name: newName,\r\n        number: newNumber,\r\n      }\r\n      AxiosServices\r\n        .create(personObject)\r\n        .then(response => {\r\n          console.log(response)\r\n          personObject.id = response.data.id\r\n          setPersons(persons.concat(personObject))\r\n          showMessage('Success')\r\n        })\r\n    } \r\n    \r\n    setNewName('')\r\n    setNewNumber('')\r\n  }\r\n\r\n  const removePerson = (x) => {\r\n    console.log(x)\r\n    if (window.confirm('Delete ' +x.name+ \"?\")) {\r\n    AxiosServices\r\n    .delete(x.id, x)\r\n    .then(response => {\r\n      console.log(response)\r\n      getData()\r\n      showMessage('Deleted')\r\n    })\r\n}\r\n}\r\n\r\n  const handlePersonsChange = (event) => {\r\n    console.log(event.target.value)\r\n    setNewName(event.target.value)\r\n  }\r\n\r\n  const handleNumberChange = (event) => {\r\n    console.log(event.target.value)\r\n    setNewNumber(event.target.value)\r\n  }\r\n\r\n  const handleFilterChange = (event) => {\r\n    console.log(event.target.value)\r\n    setFilter(event.target.value)\r\n  }\r\n\r\n  const listPersonsProps = {\r\n    persons,\r\n    filter,\r\n    removePerson: removePerson\r\n\r\n    // removePerson: (x)=>removePerson(x)  === removePerson: removePerson\r\n  }\r\n  const showMessage = (props) => {\r\n    setMessage(props)\r\n    setTimeout(() => {\r\n      setMessage(null)\r\n    }, 2500)\r\n  }\r\n  return (\r\n    <div>\r\n      <h2>Puhelinluettelo</h2>\r\n      {message&&(<div className='error'>{message}</div>)} \r\n      <div>rajaa näytettäviä <input value={filter}\r\n        onChange={handleFilterChange} /></div>\r\n      <h2>Lisää uusi</h2>\r\n      <form onSubmit={addPerson}>\r\n        <div> nimi: <input value={newName}\r\n          onChange={handlePersonsChange} />\r\n          <div>numero: <input value={newNumber}\r\n            onChange={handleNumberChange} /></div>\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\">lisää</button>\r\n        </div>\r\n      </form>\r\n      <h2>Numerot</h2>\r\n      \r\n      <ListPersons {...listPersonsProps}/>\r\n    </div>\r\n  )\r\n\r\n}\r\nexport default App\r\n//{message&&(<div className='error'>{message}</div>)}  Muista alku! hyödyllinen!!","\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App/>, document.getElementById('root'))"],"sourceRoot":""}